"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _magisterThing = _interopRequireDefault(require("./magisterThing"));

var _file = _interopRequireDefault(require("./file"));

var _util = require("./util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class FileFolder extends _magisterThing.default {
  /**
   * @private
   * @param {Magister} magister
   * @param {Object} raw
   */
  constructor(magister, raw) {
    super(magister);
    /**
     * @type {String}
     * @readonly
     */

    this.id = (0, _util.toString)(raw.Id);
    /**
     * @type {String}
     * @readonly
     */

    this.name = raw.Naam;
    /**
     * @type {Number}
     * @readonly
     */

    this.rights = raw.Privilege;
    /**
     * @type {String}
     * @readonly
     */

    this.parentId = (0, _util.toString)(raw.ParentId);
  }
  /**
   * @param {Boolean} [fillPersons=false]
   * @return {Promise<File[]>}
   */


  files(fillPersons = false) {
    const url = `${this._magister._personUrl}/bronnen?parentId=${this.id}`;
    return this._magister._privileges.needs('bronnen', 'read').then(() => this._magister.http.get(url)).then(res => res.json()).then(res => {
      const promises = res.Items.map(f => {
        const file = new _file.default(this._magister, this, f);
        return fillPersons ? file.addedBy.getFilled().then(() => file) : Promise.resolve(file);
      });
      return Promise.all(promises);
    });
  }

}

var _default = FileFolder;
exports.default = _default;